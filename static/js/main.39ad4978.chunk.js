(this.webpackJsonpadairdaniels=this.webpackJsonpadairdaniels||[]).push([[0],{100:function(e,t,n){"use strict";var r=n(0),a=n.n(r),i=(n(150),n(14)),s=n(12),o=n(101),c=n.n(o),l=n(102),d=n(209),p=n(52),m=n(2);const u=Object(l.autoPlay)(c.a);class h extends a.a.Component{constructor(e){super(e),this.portfolioSlides=[{title:"Keto Mate - Home, Angular and Ionic App",img:s.m,label:"Screenshot of Keto Mate's home screen. Keto Mate is a diet tool built using Angular and Ionic to create a hybrid mobile app with native functionality."},{title:"Keto Mate - Store Listing",img:s.h,label:"Screenshot of Keto Mate's store listing."},{title:"Keto Mate - Active",img:s.i,label:"Screenshot of Keto Mate's activity selection screen"},{title:"Keto Mate - Results",img:s.o,label:"Screenshot of Keto Mate's results screen."},{title:"Keto Mate - Advanced",img:s.j,label:"Screenshot of Keto Mate's advanced calculator, which can accept values such as IDEE from a doctor."},{title:"Keto Mate - Body Fat",img:s.k,label:"Screenshot of Keto Mate's body fat calculator, which uses the US Navy method."},{title:"Keto Mate - FAQ",img:s.l,label:"Screenshot of Keto Mate's FAQ, which answers frequently asked questions about the keto diet."},{title:"Keto Mate - Intro",img:s.n,label:"Screenshot of Keto Mate's intro to the keto diet."},{title:"Age Chart - Metric Media, using PowerBI",img:s.a,label:"PowerBI Chart showing the ages of users of Metric Media phone charging kiosks. PowerBI data was retrieved live from an Azure server."},{title:"Experience Chart - Metric Media",img:s.c,label:"PowerBI Chart showing the engagement level of users of Metric Media phone charging kiosks."},{title:"Gender Chart - Metric Media",img:s.d,label:"PowerBI Chart showing the gender of users of Metric Media phone charging kiosks."},{title:"Metric Media - Main Site",img:s.p,label:"Main site for Metric Media."},{title:"Metric Media - Speed Test",img:s.q,label:"Speed test for Metric Media main site."},{title:"Phoenix Stone - eCommerce Site",img:s.t,label:"eCommerce platform for artist Lady Phoenix Stone, using tools like WooCommerce, a custom ordering tool, and an instagram feed."},{title:"Phoenix Stone - Speed Test",img:s.u,label:"Speed test for Lady Phoenix Stone eCommerce site."},{title:"Vanderhall - eCommerce Site",img:s.w,label:"eCommerce platform for Vanderhall auto maker, hosting an array of subdealer sites and customizable purchase options."},{title:"MyLifter - eCommerce Site",img:s.r,label:"eCommerce platform for MyLifter garage tools."}],this.state={activeSlide:0,loading:!0}}portfolioDisplay(){const e=this.portfolioSlides.length,t=Object(m.jsx)("span",{className:"material-icons",children:"navigate_before"}),n=Object(m.jsx)("span",{className:"material-icons",children:"navigate_next"});return Object(m.jsxs)("div",{className:"portfolio-display",children:[Object(m.jsx)("h3",{children:this.portfolioSlides[this.state.activeSlide].title}),Object(m.jsx)(u,{axis:"x",index:this.state.activeSlide,onChangeIndex:e=>{this.setState({activeSlide:e})},interval:1e4,children:this.portfolioSlides.map((e=>Object(m.jsxs)("div",{className:"slide",children:[Object(m.jsx)("div",{className:"slide-image",children:Object(m.jsx)("img",{src:e.img,alt:e.label})}),e.label]},e.label)))}),Object(m.jsx)(d.a,{steps:e,position:"static",activeStep:this.state.activeSlide,backButton:Object(m.jsx)(p.a,{onClick:()=>{0===this.state.activeSlide?this.setState({activeSlide:e-1}):this.setState({activeSlide:this.state.activeSlide-1})},variant:"contained",startIcon:t,children:"Previous"}),nextButton:Object(m.jsx)(p.a,{onClick:()=>{this.state.activeSlide===e-1?this.setState({activeSlide:0}):this.setState({activeSlide:this.state.activeSlide+1})},variant:"contained",endIcon:n,children:"Next"})})]})}render(){return Object(m.jsx)("main",{className:"app-portfolio",children:Object(m.jsx)(i.a,{content:this.portfolioDisplay(),classGiven:"portfolio-card"})})}}t.a=h},103:function(e,t,n){"use strict";n(0);var r=n(18),a=n.n(r),i=n(15),s=(n(34),n(35),n(36),n(37),n(14)),o=n(2);n(38);const c=Object(o.jsx)(a.a,{value:"\n/*\n    This page shows the strength available in React's component\n    libraries such as Material UI and React-Swipeable-Views,\n    which carry strong functionality encompassed in a single\n    importable component.\n*/\nimport React from 'react';\nimport './Portfolio.scss';\n\nimport CardTemplate from '../Library/Card';\n\nimport \n    {\n        agechart,\n        experiencechart,\n        genderchart,\n        ketomate10k,\n        kmactive,\n        kmadvanced,\n        kmbodyfat,\n        kmfaq,\n        kmhome,\n        kmintro,\n        kmresults,\n        metricmedia,\n        metricmediaspeed,\n        mylifter,\n        phoenixstone,\n        phoenixstonespeed,\n        vanderhall\n    } from '../../Resources/images/index';\n\nimport SwipeableViews from 'react-swipeable-views';\nimport { autoPlay } from 'react-swipeable-views-utils';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Button from '@material-ui/core/Button';\n\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\n\ninterface Props {};\n\ninterface State {\n    activeSlide: number;\n    loading: boolean;\n};\n\ninterface PortfolioSlides {\n    title: string;\n    img: any;\n    label: string;\n}\n\nclass Portfolio extends React.Component <Props, State> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n          activeSlide: 0,\n          loading: true,\n        };\n      }\n\n    portfolioSlides:PortfolioSlides[] = [\n        {\n            title: 'Keto Mate - Home, Angular and Ionic App',\n            img: kmhome,\n            label: \"Screenshot of Keto Mate's home screen. Keto Mate is a diet tool built using Angular and Ionic to create a hybrid mobile app with native functionality.\"\n        },\n        {\n            title: 'Keto Mate - Store Listing',\n            img: ketomate10k,\n            label: \"Screenshot of Keto Mate's store listing.\"\n        },\n        {\n            title: 'Keto Mate - Active',\n            img: kmactive,\n            label: \"Screenshot of Keto Mate's activity selection screen\"\n        },\n        {\n            title: 'Keto Mate - Results',\n            img: kmresults,\n            label: \"Screenshot of Keto Mate's results screen.\"\n        },\n        {\n            title: 'Keto Mate - Advanced',\n            img: kmadvanced,\n            label: \"Screenshot of Keto Mate's advanced calculator, which can accept values such as IDEE from a doctor.\"\n        },\n        {\n            title: 'Keto Mate - Body Fat',\n            img: kmbodyfat,\n            label: \"Screenshot of Keto Mate's body fat calculator, which uses the US Navy method.\"\n        },\n        {\n            title: 'Keto Mate - FAQ',\n            img: kmfaq,\n            label: \"Screenshot of Keto Mate's FAQ, which answers frequently asked questions about the keto diet.\"\n        },\n        {\n            title: 'Keto Mate - Intro',\n            img: kmintro,\n            label: \"Screenshot of Keto Mate's intro to the keto diet.\"\n        },\n        {\n            title: 'Age Chart - Metric Media, using PowerBI',\n            img: agechart,\n            label: 'PowerBI Chart showing the ages of users of Metric Media phone charging kiosks. PowerBI data was retrieved live from an Azure server.'\n        },\n        {\n            title: 'Experience Chart - Metric Media',\n            img: experiencechart,\n            label: 'PowerBI Chart showing the engagement level of users of Metric Media phone charging kiosks.'\n        },\n        {\n            title: 'Gender Chart - Metric Media',\n            img: genderchart,\n            label: 'PowerBI Chart showing the gender of users of Metric Media phone charging kiosks.'\n        },\n        {\n            title: 'Metric Media - Main Site',\n            img: metricmedia,\n            label: 'Main site for Metric Media.'\n        },\n        {\n            title: 'Metric Media - Speed Test',\n            img: metricmediaspeed,\n            label: 'Speed test for Metric Media main site.'\n        },\n        {\n            title: 'Phoenix Stone - eCommerce Site',\n            img: phoenixstone,\n            label: 'eCommerce platform for artist Lady Phoenix Stone, using tools like WooCommerce, a custom ordering tool, and an instagram feed.'\n        },\n        {\n            title: 'Phoenix Stone - Speed Test',\n            img: phoenixstonespeed,\n            label: 'Speed test for Lady Phoenix Stone eCommerce site.'\n        },\n        {\n            title: 'Vanderhall - eCommerce Site',\n            img: vanderhall,\n            label: 'eCommerce platform for Vanderhall auto maker, hosting an array of subdealer sites and customizable purchase options.'\n        },\n        {\n            title: 'MyLifter - eCommerce Site',\n            img: mylifter,\n            label: 'eCommerce platform for MyLifter garage tools.'\n        },\n    ]\n\n    portfolioDisplay() {\n        const maxSlides = this.portfolioSlides.length;\n\n        const handleNext = () => {\n            if (this.state.activeSlide === maxSlides - 1) {\n                this.setState({ activeSlide: 0});\n            } else {\n                this.setState({ activeSlide: this.state.activeSlide + 1});\n            }\n          };\n        \n        const handleBack = () => {\n            if (this.state.activeSlide === 0) {\n                this.setState({activeSlide: maxSlides - 1});\n            } else {\n                this.setState({ activeSlide: this.state.activeSlide - 1});\n            }\n        };\n    \n        const handleSlideChange = (slide) => {\n            this.setState({ activeSlide: slide});\n        };\n\n        let previousIcon = (\n            <span className=\"material-icons\">\n                navigate_before\n            </span>\n        );\n\n        let nextIcon = (\n            <span className=\"material-icons\">\n                navigate_next\n            </span>\n        );\n\n        return (\n            <div className=\"portfolio-display\">\n                <h3>\n                    {this.portfolioSlides[this.state.activeSlide].title}\n                </h3>\n                <AutoPlaySwipeableViews\n                    axis='x'\n                    index={this.state.activeSlide}\n                    onChangeIndex={handleSlideChange}\n                    interval={10000}\n                >\n                {this.portfolioSlides.map((slide) => (\n                    <div key={slide.label} className='slide'>\n                        <div className=\"slide-image\">\n                            <img src={slide.img} alt={slide.label} />\n                        </div>\n                        {slide.label}\n                    </div>\n                 ))}\n                </AutoPlaySwipeableViews>\n                <MobileStepper\n                    steps={maxSlides}\n                    position=\"static\"\n                    activeStep={this.state.activeSlide}\n                    backButton={\n                        <Button \n                            onClick={handleBack} \n                            variant=\"contained\"\n                            startIcon={previousIcon}\n                        >\n                        Previous\n                        </Button>\n                    }\n                    nextButton={\n                        <Button \n                            onClick={handleNext} \n                            variant=\"contained\"\n                            endIcon={nextIcon}\n                        >\n                        Next\n                        </Button>\n                    }\n                />\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <main className=\"app-portfolio\">\n            <CardTemplate\n                content={this.portfolioDisplay()}\n                classGiven=\"portfolio-card\"\n            />\n            </main>\n        );\n    }\n}\n\nexport default Portfolio;\n",highlight:e=>Object(i.highlight)(e,i.languages.js),padding:10,style:{fontFamily:'"Fira code", "Fira Mono", monospace',fontSize:12}});t.a=function(){return Object(o.jsx)("main",{className:"app-code-viewer",children:Object(o.jsx)(s.a,{content:c,classGiven:"card"})})}},104:function(e,t,n){"use strict";n(0);var r=n(18),a=n.n(r),i=n(15),s=(n(34),n(35),n(36),n(37),n(14)),o=n(2);n(38);const c=n(194).default,l=Object(o.jsx)(a.a,{value:c,highlight:e=>Object(i.highlight)(e,i.languages.js),padding:10,style:{fontFamily:'"Fira code", "Fira Mono", monospace',fontSize:12}});t.a=()=>Object(o.jsx)("main",{className:"app-code-viewer",children:Object(o.jsx)(s.a,{content:l,classGiven:"card"})})},105:function(e,t,n){"use strict";var r=n(0),a=(n(189),n(18)),i=n.n(a),s=n(15),o=(n(34),n(35),n(36),n(37),n(14));var c=n(190).default;var l=n(191).default;var d=n(192).default;var p=n(193).default,m=n(2);n(38);t.a=()=>{const e=[{index:0,title:"App",code:c},{index:1,title:"Card",code:l},{index:2,title:"Header",code:d},{index:3,title:"Nav Bar",code:p}],[t,n]=Object(r.useState)(e[0].code),a=t=>{n(e[t].code)},u=[{onClick:()=>a(0),text:"App"},{onClick:()=>a(1),text:"Card"},{onClick:()=>a(2),text:"Header"},{onClick:()=>a(3),text:"Nav Bar"}],h=Object(m.jsx)(i.a,{value:t,highlight:e=>Object(s.highlight)(e,s.languages.js),padding:10,style:{fontFamily:'"Fira code", "Fira Mono", monospace',fontSize:12}});return Object(m.jsxs)("main",{className:"library-page",children:[(()=>{const e=[];return e.push(Object(m.jsx)(o.a,{title:"Library Navigation",links:u,classGiven:"card library-card"})),e})(),Object(m.jsx)(o.a,{content:h,classGiven:"card"})]})}},106:function(e,t,n){"use strict";n(0);var r=n(251),a=n(252),i=n(250),s=n(247),o=n(258),c=n(2);var l=e=>{const t=()=>{e.toggleCodeView()};return Object(c.jsx)("header",{className:"app-header",children:Object(c.jsxs)(r.a,{position:"static",children:[Object(c.jsx)(i.a,{edge:"start","aria-label":"menu",className:"menu-button",onClick:e.onClick,children:Object(c.jsx)("i",{className:"material-icons",children:"menu"})}),Object(c.jsx)(a.a,{className:"title-bar",children:Object(c.jsx)("h1",{children:e.currentPage.title})}),(()=>{if(e.currentPage.codeView){return Object(c.jsx)("div",{className:"code-view-bar",children:Object(c.jsx)(s.a,{control:Object(c.jsx)(o.a,{checked:e.codeView,onChange:t,name:"codeView"}),label:"Code View"})})}})()]})})};t.a=l},107:function(e,t,n){"use strict";n(0);var r=n(62),a=n(200),i=n(47),s=n(199),o=n(51),c=n(247),l=n(258),d=n(2);var p=e=>{const t=()=>{e.toggleCodeView()};return Object(d.jsx)("nav",{className:"app-nav",children:Object(d.jsxs)(a.a,{children:[(()=>{const t=[];for(const n of e.pages)t.push(Object(d.jsx)(r.b,{to:n.route,onClick:()=>e.navClick(n),children:Object(d.jsxs)(i.a,{button:!0,children:[Object(d.jsx)(s.a,{children:Object(d.jsx)("i",{className:"material-icons",children:n.icon})}),Object(d.jsx)(o.a,{primary:n.text})]})},n.text));return t})(),[Object(d.jsx)(i.a,{className:"code-view-bar",children:Object(d.jsx)(c.a,{control:Object(d.jsx)(l.a,{checked:e.codeView,onChange:t,name:"codeView"}),label:"Code View"})})]]})})};t.a=p},108:function(e,t,n){"use strict";n(0);var r=n(12),a=n(2);var i=function(){return Object(a.jsx)("figure",{children:Object(a.jsx)("img",{src:r.v,className:"loading-logo",alt:"Loading Logo"})})};t.a=i},12:function(e,t,n){"use strict";n.d(t,"e",(function(){return r})),n.d(t,"g",(function(){return a})),n.d(t,"s",(function(){return i})),n.d(t,"f",(function(){return s})),n.d(t,"b",(function(){return o})),n.d(t,"v",(function(){return c})),n.d(t,"a",(function(){return l})),n.d(t,"c",(function(){return d})),n.d(t,"d",(function(){return p})),n.d(t,"h",(function(){return m})),n.d(t,"i",(function(){return u})),n.d(t,"j",(function(){return h})),n.d(t,"k",(function(){return g})),n.d(t,"l",(function(){return f})),n.d(t,"m",(function(){return b})),n.d(t,"n",(function(){return x})),n.d(t,"o",(function(){return v})),n.d(t,"p",(function(){return S})),n.d(t,"q",(function(){return j})),n.d(t,"r",(function(){return w})),n.d(t,"t",(function(){return C})),n.d(t,"u",(function(){return k})),n.d(t,"w",(function(){return y}));var r=n.p+"static/media/headshot.cabc154e.jpg",a=n.p+"static/media/ketomate.f9749de7.png",i=n.p+"static/media/nike.e5d2204f.jpg",s=n.p+"static/media/hp.1a0ab1af.png",o=n.p+"static/media/awsLogo.a1d06509.png",c=n.p+"static/media/reactLogo.103b5fa1.svg",l=n.p+"static/media/agechart.489829a7.jpg",d=n.p+"static/media/experiencechart.2aa21f72.jpg",p=n.p+"static/media/genderchart.c21ac156.jpg",m=n.p+"static/media/ketomate10k.46a00a0b.jpg",u=n.p+"static/media/km_active.972d945d.jpg",h=n.p+"static/media/km_advanced.f93ed285.jpg",g=n.p+"static/media/km_bodyfat.ed73ad39.jpg",f=n.p+"static/media/km_faq.64d6a988.jpg",b=n.p+"static/media/km_home.108b69ae.jpg",x=n.p+"static/media/km_intro.f743972c.jpg",v=(n.p,n.p+"static/media/km_results.67e3938e.jpg"),S=n.p+"static/media/metricmedia.7e616b36.jpg",j=n.p+"static/media/metricmediaspeed.b7fee525.jpg",w=n.p+"static/media/mylifter.29cef289.jpg",C=n.p+"static/media/phoenixstone.aa417f13.jpg",k=n.p+"static/media/phoenixstone_speed.87c899aa.jpg",y=n.p+"static/media/vanderhall.f89f55ee.jpg"},131:function(e,t,n){},133:function(e,t,n){},14:function(e,t,n){"use strict";n(0);var r=n(255),a=n(253),i=n(256),s=n(254),o=n(52),c=n(2);var l=e=>{const{img:t,title:n,text:l,content:d,classGiven:p,links:m}=e;return Object(c.jsxs)(r.a,{className:p,children:[(()=>{if(t)return Object(c.jsx)(s.a,{className:"media-area",image:t,title:n})})(),Object(c.jsx)(i.a,{children:(()=>{const e=[];return n&&e.push(Object(c.jsx)("h2",{children:n})),l&&e.push(Object(c.jsx)("p",{children:l})),d&&e.push(d),e})()}),(()=>{if(m){const e=[];for(const t of m)e.push(Object(c.jsx)("a",{href:t.url?t.url:null,onClick:t.onClick?t.onClick:null,target:"_blank",rel:"noopener noreferrer",children:Object(c.jsx)(o.a,{className:"card-button",fullWidth:!0,children:t.text})}));return Object(c.jsx)(a.a,{className:"card-buttons",children:e})}})()]})};t.a=l},142:function(e,t,n){},144:function(e,t,n){"use strict";n.r(t),t.default="/* eslint-disable no-console */\r\n/*\r\n  This page demonstrates React's strong capacity for generating content from provided data. \r\n  Aside from a singular primary 'main' component, no static content exists on this page.\r\n  Instead, all content is generated based upon the information in Home.json.\r\n  I used this strategy at HP, combined with retriving said data from an API (demonstrated in the XKCD page),\r\n  to progressively load and submit information for their B2B Printer Sales Contract System.\r\n  The kind of strong typing displayed in this page is extremely important for an enterprise platform.\r\n*/\r\nimport React, { useState, useEffect, ReactElement } from 'react';\r\nimport './Home.css';\r\n\r\nimport CardTemplate from '../Library/Card';\r\nimport {\r\n  headshot,\r\n  ketomate,\r\n  hp,\r\n  nike,\r\n  aws,\r\n} from '../../Resources/images/index';\r\nimport HomeData from './Home.json';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Button from '@material-ui/core/Button';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Box from '@material-ui/core/Box';\r\n\r\ninterface Links {\r\n  url: string;\r\n  text: string;\r\n}\r\n\r\ninterface LinkSet {\r\n  url: string;\r\n  title: string;\r\n  img: string;\r\n  text: string;\r\n}\r\n\r\ninterface SkillSet {\r\n  title: string;\r\n  value: number;\r\n  text: string;\r\n}\r\n\r\ninterface Group {\r\n  classes?: string;\r\n  title?: string;\r\n  dates?: string;\r\n  description?: string;\r\n  jobTitle?: string;\r\n  text?: string;\r\n  skills?: string[];\r\n}\r\n\r\ninterface GroupSet {\r\n  group: Group[];\r\n}\r\n\r\ninterface Content {\r\n  text?: string;\r\n  linkset?: LinkSet;\r\n  skillset?: SkillSet;\r\n  groupSet?: GroupSet[];\r\n  title?: string;\r\n}\r\n\r\ninterface CardContent {\r\n  title: string;\r\n  media: string;\r\n  content: Content[];\r\n  links?: string | Links[];\r\n  classes: string;\r\n}\r\n\r\n/* \r\n  This interface is the combination of all types above, checking for specifically\r\n  known data to be present, as well as requring that any unknown data follow\r\n  the CardContent format.\r\n*/\r\ninterface DataSet {\r\n  career: CardContent;\r\n  highlights: CardContent;\r\n  skills: CardContent;\r\n  experience: CardContent;\r\n  education: CardContent;\r\n  [paramName: string]: CardContent;\r\n}\r\n\r\nconst Home = () => {\r\n  const [experienceIndex, setExperienceIndex] = useState(0);\r\n  const [educationIndex, setEducationIndex] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const homeData: DataSet = HomeData.homeData;\r\n  let experienceLength = 0;\r\n  let educationLength = 0;\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      setLoading(false);\r\n    }\r\n  }, [loading]);\r\n\r\n  /* \r\n      This function demonstrates handling multiple navigable elements for a single\r\n      view with a single function.\r\n    */\r\n\r\n  const navigate = (input: string, title: string) => {\r\n    const step = 1;\r\n    const baseIndex = 0;\r\n    let newState = 1;\r\n    const operation = input + title;\r\n\r\n    switch (operation) {\r\n      case 'previousExperience':\r\n        newState = experienceIndex - step;\r\n        if (newState < baseIndex) {\r\n          newState = experienceLength;\r\n        }\r\n        setExperienceIndex(newState);\r\n        break;\r\n      case 'previousEducation':\r\n        newState = educationIndex - step;\r\n        if (newState < baseIndex) {\r\n          newState = educationLength;\r\n        }\r\n        setEducationIndex(newState);\r\n        break;\r\n      case 'nextExperience':\r\n        newState = experienceIndex + step;\r\n        if (newState > experienceLength) {\r\n          newState = baseIndex;\r\n        }\r\n        setExperienceIndex(newState);\r\n        break;\r\n      case 'nextEducation':\r\n        newState = educationIndex + step;\r\n        if (newState > educationLength) {\r\n          newState = baseIndex;\r\n        }\r\n        setEducationIndex(newState);\r\n        break;\r\n      default:\r\n        console.error('Navigation error.');\r\n    }\r\n  };\r\n\r\n  /* \r\n      This function generates content for specifically an array of type GroupSet.\r\n      This is a good example of factoring out a function for a specific task.\r\n    */\r\n\r\n  const generateGroupSet = (groupSet: GroupSet[]) => {\r\n    const groupSetContent: ReactElement[] = [];\r\n    for (const group of groupSet) {\r\n      const groupContent: ReactElement[] = [];\r\n      let groupClass = '';\r\n      for (const item of group.group) {\r\n        if (item.title) {\r\n          groupContent.push(\r\n            <div className=\"title\">\r\n              <h3>{item.title}</h3>\r\n            </div>\r\n          );\r\n        }\r\n        if (item.dates) {\r\n          groupContent.push(\r\n            <ListItem key={item.dates} className=\"dates\">\r\n              <ListItemText primary={item.dates} />\r\n            </ListItem>\r\n          );\r\n        }\r\n        if (item.classes) {\r\n          groupClass = item.classes;\r\n        }\r\n        if (item.description) {\r\n          groupContent.push(\r\n            <ListItem key={item.description} className=\"description\">\r\n              <ListItemText primary={item.description} />\r\n            </ListItem>\r\n          );\r\n        }\r\n        if (item.jobTitle) {\r\n          groupContent.push(\r\n            <ListItem key={item.jobTitle} className=\"job-title\">\r\n              <ListItemText primary={item.jobTitle} />\r\n            </ListItem>\r\n          );\r\n        }\r\n        if (item.text) {\r\n          groupContent.push(\r\n            <ListItem key={item.text} className=\"group-text\">\r\n              <ListItemIcon>\r\n                <span className=\"material-icons\">layers</span>\r\n              </ListItemIcon>\r\n              <ListItemText primary={item.text} />\r\n            </ListItem>\r\n          );\r\n        }\r\n        if (item.skills) {\r\n          const skills: ReactElement[] = [];\r\n          for (const skill of item.skills) {\r\n            skills.push(<Chip size=\"small\" label={skill} className=\"skill\" />);\r\n          }\r\n          groupContent.push(<div className=\"skills\">{skills}</div>);\r\n        }\r\n      }\r\n      groupSetContent.push(<div className={groupClass}>{groupContent}</div>);\r\n    }\r\n    return groupSetContent;\r\n  };\r\n\r\n  /* \r\n      This function handles specifically the generation of content for the inside\r\n      of the cards within the page.\r\n    */\r\n  const formatContent = (contentSet: CardContent) => {\r\n    const formattedContent: ReactElement[] = [];\r\n    const title: string = contentSet.title;\r\n    const contentGroup: Content[] = contentSet.content;\r\n    for (const content of contentGroup) {\r\n      if (content.title) {\r\n        formattedContent.push(<h3>{title}</h3>);\r\n      }\r\n      if (content.linkset) {\r\n        const imageSet = {\r\n          ketomate,\r\n          hp,\r\n          nike,\r\n          aws,\r\n        };\r\n        const image = imageSet[content.linkset.img];\r\n        formattedContent.push(\r\n          <ListItem key={content.linkset.title} className=\"linkset\">\r\n            <a\r\n              href={content.linkset.url}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <div>\r\n                <img src={image} alt={content.linkset.title} />\r\n                <h3>{content.linkset.title}</h3>\r\n              </div>\r\n            </a>\r\n            <p>{content.linkset.text}</p>\r\n          </ListItem>\r\n        );\r\n      }\r\n      if (content.skillset) {\r\n        formattedContent.push(\r\n          <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n            <h3>{content.skillset.title}</h3>\r\n            <Rating name=\"read-only\" value={content.skillset.value} readOnly />\r\n            <p>{content.skillset.text}</p>\r\n          </Box>\r\n        );\r\n      }\r\n      if (content.groupSet) {\r\n        let groupSetLength = 0;\r\n        let groupSetContent: ReactElement;\r\n        const previousIcon = (\r\n          <span className=\"material-icons\">navigate_before</span>\r\n        );\r\n        const nextIcon = <span className=\"material-icons\">navigate_next</span>;\r\n        const generatedGroupSet = generateGroupSet(content.groupSet);\r\n        groupSetLength = generatedGroupSet.length;\r\n        if (title === 'Experience') {\r\n          experienceLength = groupSetLength - 1;\r\n          groupSetContent = generatedGroupSet[experienceIndex];\r\n        } else {\r\n          educationLength = groupSetLength - 1;\r\n          groupSetContent = generatedGroupSet[educationIndex];\r\n        }\r\n        formattedContent.push(\r\n          <div className=\"group-set\">\r\n            <div className=\"group-set-content\">{groupSetContent}</div>\r\n            <div className=\"group-set-nav\">\r\n              <div>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  startIcon={previousIcon}\r\n                  onClick={() => navigate('previous', title)}\r\n                >\r\n                  Previous\r\n                </Button>\r\n              </div>\r\n              <div>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  endIcon={nextIcon}\r\n                  onClick={() => navigate('next', title)}\r\n                >\r\n                  Next\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      if (content.text) {\r\n        formattedContent.push(\r\n          <ListItem key={content.text}>\r\n            <ListItemText primary={content.text} />\r\n          </ListItem>\r\n        );\r\n      }\r\n    }\r\n    return <List>{formattedContent}</List>;\r\n  };\r\n\r\n  /* \r\n    This function handles the generation of cards on this page, as well as\r\n    through factored out functions the generation of all content inside\r\n    the cards, leaving it the sole function called to create content\r\n    on an otherwise empty page.\r\n  */\r\n  const generateContent = () => {\r\n    const cardContentArray: CardContent[] = [];\r\n    const formattedArray: ReactElement[] = [];\r\n    for (const value of Object.values(homeData)) {\r\n      cardContentArray.push(value);\r\n    }\r\n    for (const content of cardContentArray) {\r\n      let media: string | null;\r\n      switch (content.media) {\r\n        case 'headshot':\r\n          media = headshot;\r\n          break;\r\n        default:\r\n          media = null;\r\n          break;\r\n      }\r\n      formattedArray.push(\r\n        <CardTemplate\r\n          title={content.title}\r\n          img={media}\r\n          content={formatContent(content)}\r\n          classGiven={content.classes}\r\n          links={content.links}\r\n        />\r\n      );\r\n    }\r\n    return formattedArray;\r\n  };\r\n\r\n  return <main className=\"app-home\">{generateContent()}</main>;\r\n};\r\n\r\nexport default Home;\r\n"},145:function(e,t,n){},147:function(e,t,n){"use strict";n.r(t),t.default="/*\r\n  This page is another example of consuming a RESTful API, this time\r\n  from the StockTwits API. The received information is rendered \r\n  using the CardTemplate component from the library, and can be\r\n  filtered by clicking on the stock symbol chips.\r\n*/\r\n\r\nimport React from 'react';\r\nimport './StockTwits.css';\r\n\r\nimport CardTemplate from '../Library/Card';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\ntype Props = unknown;\r\n\r\ninterface State {\r\n  symbols: any[];\r\n  input: string;\r\n  error: string;\r\n  interval: any;\r\n  currentCount: number;\r\n  filter: any[];\r\n  loading: boolean;\r\n}\r\n\r\nclass StockTwits extends React.Component<Props, State> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      symbols: [],\r\n      input: '',\r\n      error: '',\r\n      interval: undefined,\r\n      currentCount: 5,\r\n      filter: [],\r\n      loading: false,\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.timer = this.timer.bind(this);\r\n  }\r\n\r\n  chips: any[] = [];\r\n  tweets: any[] = [];\r\n  content: any;\r\n\r\n  renderChips(symbols: any[]) {\r\n    const chips: any[] = [];\r\n    for (const symbol of symbols) {\r\n      if (symbol.tweets) {\r\n        let chipClass = 'chip';\r\n        if (this.state.filter.includes(symbol.key)) {\r\n          chipClass = 'chip active-chip';\r\n        }\r\n        chips.push(\r\n          <Badge badgeContent={symbol.tweets.length} className=\"badge\">\r\n            <Chip\r\n              label={symbol.label}\r\n              className={chipClass}\r\n              key={symbol.key}\r\n              onClick={() => this.chipClick(symbol)}\r\n            />\r\n          </Badge>\r\n        );\r\n      }\r\n      this.chips = chips;\r\n    }\r\n  }\r\n\r\n  setTimer() {\r\n    const intervalId = setInterval(this.timer, 60000);\r\n    this.setState({\r\n      interval: intervalId,\r\n      currentCount: 5,\r\n    });\r\n  }\r\n\r\n  timer() {\r\n    const newCount = this.state.currentCount - 1;\r\n    if (newCount >= 0) {\r\n      this.setState({ currentCount: newCount });\r\n    } else {\r\n      this.submitRequest();\r\n      clearInterval(this.state.interval);\r\n      this.setTimer();\r\n    }\r\n  }\r\n\r\n  renderTweets(symbols: any[]) {\r\n    const tweets: any[] = [];\r\n    let tweetsFound = 0;\r\n    for (const symbol of symbols) {\r\n      if (symbol.tweets) {\r\n        tweetsFound++;\r\n        for (const [index, tweet] of symbol.tweets.entries()) {\r\n          const message = (\r\n            <div key={tweet.user.username + index}>\r\n              <figure className=\"picture\">\r\n                <img\r\n                  src={tweet.user.avatar_url_ssl}\r\n                  alt={tweet.user.username}\r\n                />\r\n              </figure>\r\n              <p className=\"namearea\">\r\n                <span className=\"name\">{tweet.user.name}</span>{' '}\r\n                <span className=\"username\">@ {tweet.user.username}</span>\r\n              </p>\r\n              <p className=\"text\">{tweet.body}</p>\r\n            </div>\r\n          );\r\n          tweets.push(\r\n            <CardTemplate content={message} key={index} classGiven=\"card\" />\r\n          );\r\n        }\r\n      }\r\n    }\r\n    if (tweetsFound > 0) {\r\n      this.setTimer();\r\n    }\r\n    this.tweets = tweets;\r\n  }\r\n\r\n  chipClick(symbol: any) {\r\n    const filter: any[] = this.state.filter;\r\n    const symbols: any[] = this.state.symbols;\r\n    const filteredSymbols: any[] = [];\r\n    if (filter.includes(symbol.key)) {\r\n      const position = filter.indexOf(symbol.key);\r\n      filter.splice(position, 1);\r\n      if (filter.length === 0) {\r\n        this.setState({ filter });\r\n        clearInterval(this.state.interval);\r\n        this.renderTweets(symbols);\r\n        this.renderChips(symbols);\r\n        return;\r\n      }\r\n    } else {\r\n      filter.push(symbol.key);\r\n    }\r\n    for (const member of filter) {\r\n      for (const symbol of symbols) {\r\n        if (symbol.key === member) {\r\n          filteredSymbols.push(symbol);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    this.setState({ filter });\r\n    clearInterval(this.state.interval);\r\n    this.renderTweets(filteredSymbols);\r\n    this.renderChips(symbols);\r\n  }\r\n\r\n  async retrieveTweets(symbols: any[]) {\r\n    /* Retrieves images from StockTwits using open cors-anywhere proxy */\r\n    this.setState({ loading: true });\r\n    const proxyUrl = 'https://api.allorigins.win/get?url=';\r\n    const urlBase = 'https://api.stocktwits.com/api/2/streams/symbol/';\r\n    const urlEnd = '.json';\r\n    const proxiedRequest = (url, options = { headers: {} }) =>\r\n      fetch(url, {\r\n        ...options,\r\n        headers: {\r\n          ...options.headers,\r\n          'X-Requested-With': 'stock-twits-live-feed',\r\n        },\r\n      })\r\n        .then((res) => res.json())\r\n        .catch((error) => this.setState({ error: error }));\r\n    for (const symbol of symbols) {\r\n      const useUrl = urlBase.concat(symbol.label).concat(urlEnd);\r\n      const finalUrl = proxyUrl.concat(useUrl);\r\n      await proxiedRequest(finalUrl)\r\n        .then((data) => {\r\n          const contents = JSON.parse(data.contents);\r\n          symbol.tweets = contents.messages;\r\n        })\r\n        .catch((error) => this.setState({ error: error }));\r\n    }\r\n    if (!this.state.error && symbols[0].tweets) {\r\n      this.renderChips(symbols);\r\n      this.renderTweets(symbols);\r\n    }\r\n    this.setState({ loading: false });\r\n    return symbols;\r\n  }\r\n\r\n  async submitRequest() {\r\n    const newSymbols = this.state.input\r\n      .toUpperCase()\r\n      .replace(/\\s+/g, '')\r\n      .split(',');\r\n    let formattedSymbols: any[] = [];\r\n    let key = 0;\r\n    for (const symbol of newSymbols) {\r\n      formattedSymbols.push({ key: key, label: symbol, tweets: null });\r\n      key++;\r\n    }\r\n    formattedSymbols = await this.retrieveTweets(formattedSymbols);\r\n    this.setState({ symbols: formattedSymbols });\r\n  }\r\n\r\n  handleChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n    event.preventDefault();\r\n    this.setState({ input: event.target.value });\r\n  }\r\n\r\n  handleSubmit(event: React.SyntheticEvent) {\r\n    event.preventDefault();\r\n    this.submitRequest();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.state.interval);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      this.content = <CircularProgress />;\r\n    } else if (this.state.error) {\r\n      this.content = <p>{this.state.error}</p>;\r\n    } else if (this.tweets[0]) {\r\n      this.content = (\r\n        <section className=\"content\">\r\n          <section className=\"chips\">{this.chips}</section>\r\n          <section className=\"tweets\">{this.tweets}</section>\r\n        </section>\r\n      );\r\n    } else {\r\n      this.content = null;\r\n    }\r\n    return (\r\n      <main className=\"app-stocktwits\">\r\n        <section className=\"search\">\r\n          <form>\r\n            <TextField\r\n              className=\"stock-input\"\r\n              id=\"stock-symbols\"\r\n              label=\"Input stock symbols (separate with a comma)\"\r\n              value={this.state.input}\r\n              onChange={this.handleChange}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">$</InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n            <br />\r\n            <Button\r\n              className=\"search-button\"\r\n              variant=\"contained\"\r\n              onClick={this.handleSubmit}\r\n            >\r\n              Search\r\n            </Button>\r\n          </form>\r\n        </section>\r\n        {this.content}\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StockTwits;\r\n"},148:function(e,t,n){},149:function(e,t,n){"use strict";n.r(t),t.default="/*\r\n  This page demonstrates React's ability to consume RESTful APIs in real time.\r\n  Of particular use and note, is that the react page loads, and then sends a \r\n  request for content that is able to be live loaded into the page without\r\n  a refresh. It is also a good example of abstraction in React, where multiple\r\n  components are defined within this component, segmented by function.\r\n*/\r\nimport React from 'react';\r\nimport './xkcd.css';\r\nimport { reactLogo } from '../../Resources/images/index';\r\n\r\nimport CardTemplate from '../Library/Card';\r\n\r\ninterface Props {\r\n  img?: any;\r\n  onClick?: any;\r\n  className?: any;\r\n}\r\n\r\ninterface State {\r\n  images?: any;\r\n  index: number;\r\n  initialIndex: number;\r\n  finalIndex: number;\r\n  loading: boolean;\r\n}\r\n\r\nclass Panel extends React.Component<Props> {\r\n  panelTitle = this.props.img.title;\r\n  panelSrc = this.props.img.img;\r\n  panelAlt = this.props.img.alt;\r\n  panelFigure = (\r\n    <figure>\r\n      <img src={this.panelSrc} alt={this.panelAlt} />\r\n    </figure>\r\n  );\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CardTemplate\r\n          title={this.panelTitle}\r\n          content={this.panelFigure}\r\n          classGiven=\"card panel-card\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass NavBar extends React.Component<Props> {\r\n  render() {\r\n    return (\r\n      <nav>\r\n        <button onClick={() => this.props.onClick('first')}>First</button>\r\n        <button onClick={() => this.props.onClick('previous')}>Previous</button>\r\n        <button onClick={() => this.props.onClick('next')}>Next</button>\r\n        <button onClick={() => this.props.onClick('last')}>Last</button>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nclass XKCD extends React.Component<Props, State> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      images: Array(3).fill(''),\r\n      index: 1,\r\n      initialIndex: 1,\r\n      finalIndex: 0,\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  async retrieveImages(index: any) {\r\n    /* Retrieves images from XKCD using open cors-anywhere proxy */\r\n    this.setState({ loading: true });\r\n    this.setState({ images: Array(3).fill(null) });\r\n    const proxyUrl = 'https://api.allorigins.win/get?url=';\r\n    const urlBase = 'http://xkcd.com/';\r\n    const urlEnd = '/info.0.json';\r\n    const currentUrl = 'http://xkcd.com/info.0.json';\r\n    let currentIndex = index;\r\n    const urlArray: any[] = [];\r\n    for (let i = 0; i < 3; i++) {\r\n      const createUrl = urlBase.concat(currentIndex).concat(urlEnd);\r\n      urlArray.push(createUrl);\r\n      currentIndex++;\r\n    }\r\n    const proxiedRequest = (url: string, options = { headers: {} }) =>\r\n      fetch(url, {\r\n        ...options,\r\n        headers: {\r\n          ...options.headers,\r\n          'X-Requested-With': 'xkcd-slideshow',\r\n        },\r\n      })\r\n        .then((res) => res.json())\r\n        .catch((error) => console.error(error));\r\n    if (this.state.finalIndex === 0) {\r\n      const finalUrl = proxyUrl.concat(currentUrl);\r\n      await proxiedRequest(finalUrl)\r\n        .then((data) => {\r\n          const contents = JSON.parse(data.contents);\r\n          const finalPlaceholder = contents.num - 2;\r\n          this.setState({ finalIndex: finalPlaceholder });\r\n        })\r\n        .catch((error) => console.error(error));\r\n    }\r\n    const dataArray: any[] = [];\r\n    for (const useUrl of urlArray) {\r\n      const finalUrl = proxyUrl.concat(useUrl);\r\n      await proxiedRequest(finalUrl)\r\n        .then((data: any) => {\r\n          const contents = JSON.parse(data.contents);\r\n          dataArray.push(contents);\r\n        })\r\n        .catch((error) => console.error(error));\r\n    }\r\n    this.setState({ images: dataArray });\r\n    this.setState({ loading: false });\r\n  }\r\n\r\n  renderPanels(i: number) {\r\n    return <Panel img={this.state.images[i]} className=\"panel\" />;\r\n  }\r\n\r\n  navigate(input: string) {\r\n    const step = 3;\r\n    let newState = 1;\r\n    switch (input) {\r\n      case 'first':\r\n        newState = this.state.initialIndex;\r\n        break;\r\n      case 'previous':\r\n        newState = this.state.index - step;\r\n        if (newState < this.state.initialIndex) {\r\n          newState = this.state.initialIndex;\r\n        }\r\n        break;\r\n      case 'next':\r\n        newState = this.state.index + step;\r\n        if (newState > this.state.finalIndex) {\r\n          newState = this.state.finalIndex;\r\n        }\r\n        break;\r\n      case 'last':\r\n        newState = this.state.finalIndex;\r\n        break;\r\n      default:\r\n        console.log('Navigation error.');\r\n    }\r\n    this.retrieveImages(newState);\r\n    this.setState({ index: newState });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveImages(this.state.index);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"xkcd\">\r\n        {this.state.loading ? (\r\n          <img src={reactLogo} className=\"loading-logo\" alt=\"logo\" />\r\n        ) : this.state.images[0] ? (\r\n          <main className=\"slideshow\">\r\n            {this.renderPanels(0)}\r\n            {this.renderPanels(1)}\r\n            {this.renderPanels(2)}\r\n          </main>\r\n        ) : (\r\n          <p>Loading error</p>\r\n        )}\r\n        <footer className=\"xkcd-footer\">\r\n          <NavBar onClick={(i: string) => this.navigate(i)} />\r\n          <section className=\"credit\">\r\n            <p>\r\n              Sincere thanks to{' '}\r\n              <a href=\"https://xkcd.com\">Randlal Munroe over at XKCD</a> for\r\n              making such an awesome webcomic.\r\n            </p>\r\n          </section>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default XKCD;\r\n"},150:function(e,t,n){},189:function(e,t,n){},190:function(e,t,n){"use strict";n.r(t),t.default="import React, { ReactElement, useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nimport Header from './Components/Library/Header';\r\nimport NavBar from './Components/Library/NavBar';\r\nimport LoadScreen from './Components/Library/LoadScreen';\r\n\r\nimport Home from './Components/Home/Home';\r\nimport HomeViewer from './Components/Home/Home.codeview';\r\nimport StockTwits from './Components/Stocktwits/Stocktwits';\r\nimport StockViewer from './Components/Stocktwits/StockTwits.codeview';\r\nimport XKCD from './Components/XKCD/xkcd';\r\nimport XKCDViewer from './Components/XKCD/xkcd.codeview';\r\nimport Portfolio from './Components/Portfolio/Portfolio';\r\nimport PortfolioViewer from './Components/Portfolio/Portfolio.codeview';\r\nimport Library from './Components/Library/Library';\r\nimport LibraryViewer from './Components/Library/Library.codeview';\r\nimport Portal from './Components/Library/Portal/Portal';\r\nimport PortalViewer from './Components/Library/Portal/Portal.codeview';\r\n\r\ninterface PageInterface {\r\n  text: string;\r\n  title: string;\r\n  route: string;\r\n  icon: string;\r\n  component: ReactElement;\r\n  codeView?: ReactElement;\r\n  exactRoute?: boolean;\r\n}\r\n\r\nconst App = () => {\r\n  const [navShow, setNavShow] = useState(false);\r\n  const [navShowClass, setNavShowClass] = useState('app app-without-menu');\r\n  const pages: PageInterface[] = [\r\n    {\r\n      text: 'Home',\r\n      title: 'Adair Daniels',\r\n      route: '/',\r\n      icon: 'home',\r\n      component: <Home />,\r\n      codeView: <HomeViewer />,\r\n      exactRoute: true,\r\n    },\r\n    {\r\n      text: 'PokeTable',\r\n      title: 'PokeTable',\r\n      route: '/poketable',\r\n      icon: 'table_view',\r\n      component: (\r\n        <Portal\r\n          url=\"https://andeleidun.github.io/pokeTable/\"\r\n          title=\"PokeTable\"\r\n        />\r\n      ),\r\n      codeView: <PortalViewer />,\r\n    },\r\n    {\r\n      text: 'Robot Battle Arena',\r\n      title: 'Robot Battle Arena',\r\n      route: '/robotBattle',\r\n      icon: 'table_view',\r\n      component: (\r\n        <Portal\r\n          url=\"https://andeleidun.github.io/robot-arena/\"\r\n          title=\"Robot Battle Arena\"\r\n        />\r\n      ),\r\n      codeView: <PortalViewer />,\r\n    },\r\n    {\r\n      text: 'StockTwits Feed',\r\n      title: 'StockTwits Feed',\r\n      route: '/stock',\r\n      icon: 'dvr',\r\n      component: <StockTwits />,\r\n      codeView: <StockViewer />,\r\n    },\r\n    {\r\n      text: 'XKCD Slideshow',\r\n      title: 'XKCD Slideshow',\r\n      route: '/xkcd',\r\n      icon: 'burst_mode',\r\n      component: <XKCD />,\r\n      codeView: <XKCDViewer />,\r\n    },\r\n    {\r\n      text: 'Portfolio',\r\n      title: 'Portfolio',\r\n      route: '/portfolio',\r\n      icon: 'compare',\r\n      component: <Portfolio />,\r\n      codeView: <PortfolioViewer />,\r\n    },\r\n    {\r\n      text: 'Library',\r\n      title: 'Library',\r\n      route: '/library',\r\n      icon: 'library_books',\r\n      component: <Library />,\r\n      codeView: <LibraryViewer />,\r\n    },\r\n  ];\r\n  const [currentPage, setCurrentPage] = useState(pages[0]);\r\n  const [codeView, setCodeView] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      setLoading(false);\r\n    }\r\n  }, [loading]);\r\n\r\n  const toggleNav = () => {\r\n    if (navShow) {\r\n      setNavShowClass('app app-without-menu ');\r\n    } else {\r\n      setNavShowClass('app app-with-menu ');\r\n    }\r\n    setNavShow(!navShow);\r\n  };\r\n\r\n  const toggleCodeView = () => {\r\n    setCodeView(!codeView);\r\n  };\r\n\r\n  const navigate = (page: PageInterface) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  const generateOverlay = () => {\r\n    if (navShow) {\r\n      return <div className=\"app-overlay-mobile\" onClick={() => toggleNav()} />;\r\n    }\r\n  };\r\n\r\n  const generateComponent = () => {\r\n    const generatedContent: ReactElement[] = [];\r\n    for (const page of pages) {\r\n      let component: ReactElement;\r\n      if (codeView && page.codeView) {\r\n        component = page.codeView;\r\n      } else {\r\n        component = page.component;\r\n      }\r\n      generatedContent.push(\r\n        <Route\r\n          path={page.route}\r\n          exact={page.exactRoute}\r\n          key={page.title}\r\n          children={component}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <Switch>\r\n        {generatedContent}\r\n        <Route path=\"/\" children={pages[0].component} key={0} />\r\n      </Switch>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <BrowserRouter basename={process ? process.env.PUBLIC_URL : ''}>\r\n      <div className={navShowClass}>\r\n        <Header\r\n          onClick={() => toggleNav()}\r\n          currentPage={currentPage}\r\n          codeView={codeView}\r\n          toggleCodeView={() => toggleCodeView()}\r\n        />\r\n        <Slide direction=\"right\" in={navShow} mountOnEnter unmountOnExit>\r\n          <div className=\"app-menu\">\r\n            <NavBar\r\n              pages={pages}\r\n              navClick={(page: PageInterface) => navigate(page)}\r\n              codeView={codeView}\r\n              toggleCodeView={() => toggleCodeView()}\r\n            />\r\n          </div>\r\n        </Slide>\r\n        {generateOverlay()}\r\n        <div className=\"app-main\">\r\n          {loading ? (\r\n            <LoadScreen />\r\n          ) : (\r\n            <div className=\"app-content\">{generateComponent()}</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"},191:function(e,t,n){"use strict";n.r(t),t.default="import React, { ReactElement } from 'react';\n\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\n\nconst CardTemplate = (props) => {\n  const { img, title, text, content, classGiven, links } = props;\n\n  const generateLinks = () => {\n    if (links) {\n      const generatedLinks: ReactElement[] = [];\n      for (const link of links) {\n        generatedLinks.push(\n          <a\n            href={link.url ? link.url : null}\n            onClick={link.onClick ? link.onClick : null}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <Button className=\"card-button\" fullWidth>\n              {link.text}\n            </Button>\n          </a>\n        );\n      }\n      return (\n        <CardActions className=\"card-buttons\">{generatedLinks}</CardActions>\n      );\n    }\n  };\n\n  const generateMedia = () => {\n    if (img) {\n      return <CardMedia className=\"media-area\" image={img} title={title} />;\n    }\n  };\n\n  const generateContent = () => {\n    const genContent: ReactElement[] = [];\n\n    if (title) {\n      genContent.push(<h2>{title}</h2>);\n    }\n    if (text) {\n      genContent.push(<p>{text}</p>);\n    }\n    if (content) {\n      genContent.push(content);\n    }\n    return genContent;\n  };\n\n  return (\n    <Card className={classGiven}>\n      {generateMedia()}\n      <CardContent>{generateContent()}</CardContent>\n      {generateLinks()}\n    </Card>\n  );\n};\n\nexport default CardTemplate;\n"},192:function(e,t,n){"use strict";n.r(t),t.default='import React from \'react\';\r\n\r\nimport AppBar from \'@material-ui/core/AppBar\';\r\nimport Toolbar from \'@material-ui/core/Toolbar\';\r\nimport IconButton from \'@material-ui/core/IconButton\';\r\nimport FormControlLabel from \'@material-ui/core/FormControlLabel\';\r\nimport Switch from \'@material-ui/core/Switch\';\r\n\r\nconst Header = (props) => {\r\n  const handleChange = () => {\r\n    props.toggleCodeView();\r\n  };\r\n\r\n  const generateCodeView = () => {\r\n    if (props.currentPage.codeView) {\r\n      const codeViewBar = (\r\n        <div className="code-view-bar">\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={props.codeView}\r\n                onChange={handleChange}\r\n                name="codeView"\r\n              />\r\n            }\r\n            label="Code View"\r\n          />\r\n        </div>\r\n      );\r\n      return codeViewBar;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <header className="app-header">\r\n      <AppBar position="static">\r\n        <IconButton\r\n          edge="start"\r\n          aria-label="menu"\r\n          className="menu-button"\r\n          onClick={props.onClick}\r\n        >\r\n          <i className="material-icons">menu</i>\r\n        </IconButton>\r\n        <Toolbar className="title-bar">\r\n          <h1>{props.currentPage.title}</h1>\r\n        </Toolbar>\r\n        {generateCodeView()}\r\n      </AppBar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n'},193:function(e,t,n){"use strict";n.r(t),t.default="import React, { ReactElement } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst NavBar = (props) => {\r\n  const handleChange = () => {\r\n    props.toggleCodeView();\r\n  };\r\n\r\n  const populatePages = () => {\r\n    const populatedPages: ReactElement[] = [];\r\n    for (const page of props.pages) {\r\n      populatedPages.push(\r\n        <Link\r\n          to={page.route}\r\n          onClick={() => props.navClick(page)}\r\n          key={page.text}\r\n        >\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <i className=\"material-icons\">{page.icon}</i>\r\n            </ListItemIcon>\r\n            <ListItemText primary={page.text} />\r\n          </ListItem>\r\n        </Link>\r\n      );\r\n    }\r\n    return populatedPages;\r\n  };\r\n\r\n  const populateOptions = () => {\r\n    const options: ReactElement[] = [\r\n      <ListItem className=\"code-view-bar\">\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={props.codeView}\r\n              onChange={handleChange}\r\n              name=\"codeView\"\r\n            />\r\n          }\r\n          label=\"Code View\"\r\n        />\r\n      </ListItem>,\r\n    ];\r\n    return options;\r\n  };\r\n\r\n  return (\r\n    <nav className=\"app-nav\">\r\n      <List>\r\n        {populatePages()}\r\n        {populateOptions()}\r\n      </List>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n"},194:function(e,t,n){"use strict";n.r(t),t.default="import React, { useState } from 'react';\r\nimport './Library.css';\r\n\r\nimport Viewer from 'react-code-viewer';\r\nimport { highlight, languages } from 'prismjs/components/prism-core';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-javascript';\r\nimport 'prismjs/components/prism-markup';\r\nimport '../Library/CodeView.css';\r\nimport CardTemplate from './Card';\r\n\r\nimport AppCode from './App.codeview';\r\nimport CardCode from './Card/Card.codeview';\r\nimport HeaderCode from './Header/Header.codeview';\r\nimport NavBarCode from './NavBar/NavBar.codeview';\r\n\r\nrequire('prismjs/components/prism-jsx');\r\n\r\nconst Library = () => {\r\n  const components = [\r\n    { index: 0, title: 'App', code: AppCode },\r\n    { index: 1, title: 'Card', code: CardCode },\r\n    { index: 2, title: 'Header', code: HeaderCode },\r\n    { index: 3, title: 'Nav Bar', code: NavBarCode },\r\n  ];\r\n  const [codeState, setCodeState] = useState(components[0].code);\r\n\r\n  const navigate = (index: number) => {\r\n    setCodeState(components[index].code);\r\n  };\r\n\r\n  const links = [\r\n    { onClick: () => navigate(0), text: 'App' },\r\n    { onClick: () => navigate(1), text: 'Card' },\r\n    { onClick: () => navigate(2), text: 'Header' },\r\n    { onClick: () => navigate(3), text: 'Nav Bar' },\r\n  ];\r\n\r\n  const generateOptions = () => {\r\n    const generatedOptions: any[] = [];\r\n\r\n    generatedOptions.push(\r\n      <CardTemplate\r\n        title={'Library Navigation'}\r\n        links={links}\r\n        classGiven=\"card library-card\"\r\n      />\r\n    );\r\n    return generatedOptions;\r\n  };\r\n\r\n  const viewer = (\r\n    <Viewer\r\n      value={codeState}\r\n      highlight={(value) => highlight(value, languages.js)}\r\n      padding={10}\r\n      style={{\r\n        fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\r\n        fontSize: 12,\r\n      }}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <main className=\"library-page\">\r\n      {generateOptions()}\r\n      <CardTemplate content={viewer} classGiven=\"card\" />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n"},195:function(e,t,n){},196:function(e,t,n){"use strict";n.r(t),t.default="/*\r\n  This component uses lazy loading iframes to setup a portal\r\n  for separately hosted micro-frontends. This is implemented \r\n  with the PokeTable.\r\n  PokeTable is a filterable and sortable React data table.\r\n  PokeTable code can be found on github -\r\n  https://github.com/Andeleidun/pokeTable\r\n*/\r\nimport React from 'react';\r\nimport './Portal.css';\r\n\r\ninterface Props {\r\n  url: string;\r\n  title: string;\r\n}\r\n\r\nconst Portal = ({ url, title }: Props) => {\r\n  return <iframe src={url} loading=\"lazy\" className=\"portal\" title={title} />;\r\n};\r\n\r\nexport default Portal;\r\n"},197:function(e,t,n){"use strict";n.r(t);n(0);var r=n(11),a=n.n(r),i=(n(131),n(91));Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));var s=n(2);a.a.render(Object(s.jsx)(i.a,{}),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((e=>{e.unregister()})).catch((e=>{console.error(e.message)}))},37:function(e,t,n){},79:function(e,t,n){"use strict";n(0),n(195);var r=n(2);t.a=e=>{let{url:t,title:n}=e;return Object(r.jsx)("iframe",{src:t,loading:"lazy",className:"portal",title:n})}},80:function(e,t,n){"use strict";n(0);var r=n(18),a=n.n(r),i=n(15),s=(n(34),n(35),n(36),n(37),n(14)),o=n(2);n(38);const c=n(196).default,l=Object(o.jsx)(a.a,{value:c,highlight:e=>Object(i.highlight)(e,i.languages.js),padding:10,style:{fontFamily:'"Fira code", "Fira Mono", monospace',fontSize:12}});t.a=()=>Object(o.jsx)("main",{className:"app-code-viewer",children:Object(o.jsx)(s.a,{content:l,classGiven:"card"})})},91:function(e,t,n){"use strict";(function(e){var r=n(0),a=(n(133),n(13)),i=n(62),s=n(204),o=n(106),c=n(107),l=n(108),d=n(93),p=n(95),m=n(96),u=n(97),h=n(98),g=n(99),f=n(100),b=n(103),x=n(105),v=n(104),S=n(79),j=n(80),w=n(2);t.a=()=>{const[e,t]=Object(r.useState)(!1),[n,C]=Object(r.useState)("app app-without-menu"),k=[{text:"Home",title:"Adair Daniels",route:"/",icon:"home",component:Object(w.jsx)(d.a,{}),codeView:Object(w.jsx)(p.a,{}),exactRoute:!0},{text:"PokeTable",title:"PokeTable",route:"/poketable",icon:"table_view",component:Object(w.jsx)(S.a,{url:"https://andeleidun.github.io/pokeTable/",title:"PokeTable"}),codeView:Object(w.jsx)(j.a,{})},{text:"Robot Battle Arena",title:"Robot Battle Arena",route:"/robotBattle",icon:"table_view",component:Object(w.jsx)(S.a,{url:"https://andeleidun.github.io/robot-arena/",title:"Robot Battle Arena"}),codeView:Object(w.jsx)(j.a,{})},{text:"StockTwits Feed",title:"StockTwits Feed",route:"/stock",icon:"dvr",component:Object(w.jsx)(m.a,{}),codeView:Object(w.jsx)(u.a,{})},{text:"XKCD Slideshow",title:"XKCD Slideshow",route:"/xkcd",icon:"burst_mode",component:Object(w.jsx)(h.a,{}),codeView:Object(w.jsx)(g.a,{})},{text:"Portfolio",title:"Portfolio",route:"/portfolio",icon:"compare",component:Object(w.jsx)(f.a,{}),codeView:Object(w.jsx)(b.a,{})},{text:"Library",title:"Library",route:"/library",icon:"library_books",component:Object(w.jsx)(x.a,{}),codeView:Object(w.jsx)(v.a,{})}],[y,O]=Object(r.useState)(k[0]),[I,N]=Object(r.useState)(!1),[L,P]=Object(r.useState)(!0);Object(r.useEffect)((()=>{L&&P(!1)}),[L]);const A=()=>{C(e?"app app-without-menu ":"app app-with-menu "),t(!e)},T=()=>{N(!I)};return Object(w.jsx)(i.a,{basename:"",children:Object(w.jsxs)("div",{className:n,children:[Object(w.jsx)(o.a,{onClick:()=>A(),currentPage:y,codeView:I,toggleCodeView:()=>T()}),Object(w.jsx)(s.a,{direction:"right",in:e,mountOnEnter:!0,unmountOnExit:!0,children:Object(w.jsx)("div",{className:"app-menu",children:Object(w.jsx)(c.a,{pages:k,navClick:e=>(e=>{O(e)})(e),codeView:I,toggleCodeView:()=>T()})})}),(()=>{if(e)return Object(w.jsx)("div",{className:"app-overlay-mobile",onClick:()=>A()})})(),Object(w.jsx)("div",{className:"app-main",children:L?Object(w.jsx)(l.a,{}):Object(w.jsx)("div",{className:"app-content",children:(()=>{const e=[];for(const t of k){let n;n=I&&t.codeView?t.codeView:t.component,e.push(Object(w.jsx)(a.a,{path:t.route,exact:t.exactRoute,children:n},t.title))}return Object(w.jsxs)(a.c,{children:[e,Object(w.jsx)(a.a,{path:"/",children:k[0].component},0)]})})()})})]})})}}).call(this,n(132))},93:function(e,t,n){"use strict";var r=n(0),a=(n(142),n(14)),i=n(12),s=n(94),o=n(200),c=n(47),l=n(199),d=n(51),p=n(111),m=n(52),u=n(207),h=n(206),g=n(2);t.a=()=>{const[e,t]=Object(r.useState)(0),[n,f]=Object(r.useState)(0),[b,x]=Object(r.useState)(!0),v=s.homeData;let S=0,j=0;Object(r.useEffect)((()=>{b&&x(!1)}),[b]);const w=(r,a)=>{let i=1;switch(r+a){case"previousExperience":i=e-1,i<0&&(i=S),t(i);break;case"previousEducation":i=n-1,i<0&&(i=j),f(i);break;case"nextExperience":i=e+1,i>S&&(i=0),t(i);break;case"nextEducation":i=n+1,i>j&&(i=0),f(i);break;default:console.error("Navigation error.")}},C=e=>{const t=[];for(const n of e){const e=[];let r="";for(const t of n.group)if(t.title&&e.push(Object(g.jsx)("div",{className:"title",children:Object(g.jsx)("h3",{children:t.title})})),t.dates&&e.push(Object(g.jsx)(c.a,{className:"dates",children:Object(g.jsx)(d.a,{primary:t.dates})},t.dates)),t.classes&&(r=t.classes),t.description&&e.push(Object(g.jsx)(c.a,{className:"description",children:Object(g.jsx)(d.a,{primary:t.description})},t.description)),t.jobTitle&&e.push(Object(g.jsx)(c.a,{className:"job-title",children:Object(g.jsx)(d.a,{primary:t.jobTitle})},t.jobTitle)),t.text&&e.push(Object(g.jsxs)(c.a,{className:"group-text",children:[Object(g.jsx)(l.a,{children:Object(g.jsx)("span",{className:"material-icons",children:"layers"})}),Object(g.jsx)(d.a,{primary:t.text})]},t.text)),t.skills){const n=[];for(const e of t.skills)n.push(Object(g.jsx)(p.a,{size:"small",label:e,className:"skill"}));e.push(Object(g.jsx)("div",{className:"skills",children:n}))}t.push(Object(g.jsx)("div",{className:r,children:e}))}return t},k=t=>{const r=[],a=t.title,s=t.content;for(const o of s){if(o.title&&r.push(Object(g.jsx)("h3",{children:a})),o.linkset){const e={ketomate:i.g,hp:i.f,nike:i.s,aws:i.b}[o.linkset.img];r.push(Object(g.jsxs)(c.a,{className:"linkset",children:[Object(g.jsx)("a",{href:o.linkset.url,target:"_blank",rel:"noopener noreferrer",children:Object(g.jsxs)("div",{children:[Object(g.jsx)("img",{src:e,alt:o.linkset.title}),Object(g.jsx)("h3",{children:o.linkset.title})]})}),Object(g.jsx)("p",{children:o.linkset.text})]},o.linkset.title))}if(o.skillset&&r.push(Object(g.jsxs)(h.a,{component:"fieldset",mb:3,borderColor:"transparent",children:[Object(g.jsx)("h3",{children:o.skillset.title}),Object(g.jsx)(u.a,{name:"read-only",value:o.skillset.value,readOnly:!0}),Object(g.jsx)("p",{children:o.skillset.text})]})),o.groupSet){let t,i=0;const s=Object(g.jsx)("span",{className:"material-icons",children:"navigate_before"}),c=Object(g.jsx)("span",{className:"material-icons",children:"navigate_next"}),l=C(o.groupSet);i=l.length,"Experience"===a?(S=i-1,t=l[e]):(j=i-1,t=l[n]),r.push(Object(g.jsxs)("div",{className:"group-set",children:[Object(g.jsx)("div",{className:"group-set-content",children:t}),Object(g.jsxs)("div",{className:"group-set-nav",children:[Object(g.jsx)("div",{children:Object(g.jsx)(m.a,{variant:"contained",startIcon:s,onClick:()=>w("previous",a),children:"Previous"})}),Object(g.jsx)("div",{children:Object(g.jsx)(m.a,{variant:"contained",endIcon:c,onClick:()=>w("next",a),children:"Next"})})]})]}))}o.text&&r.push(Object(g.jsx)(c.a,{children:Object(g.jsx)(d.a,{primary:o.text})},o.text))}return Object(g.jsx)(o.a,{children:r})};return Object(g.jsx)("main",{className:"app-home",children:(()=>{const e=[],t=[];for(const n of Object.values(v))e.push(n);for(const n of e){let e;if("headshot"===n.media)e=i.e;else e=null;t.push(Object(g.jsx)(a.a,{title:n.title,img:e,content:k(n),classGiven:n.classes,links:n.links}))}return t})()})}},94:function(e){e.exports=JSON.parse('{"homeData":{"career":{"title":"Lead UI Developer","media":"headshot","content":[{"text":"Over 8 years of experience as Frontend Developer specializing in the development and design of accessible user interfaces for complex software applications."},{"text":"Expert at developing full stack enterprise level API integrated applications utilizing React 18, Redux, JavaScript, TypeScript, Next.js, Angular, Ionic, Vue, NodeJS, HTML, and CSS."},{"text":"Experienced leader with a successful track record of bringing applications to launch, coaching junior developers, and coordinating with other team leads to bring projects to life."},{"text":"Highly knowledgeable with Cloud, Web, and Client/Server applications that includes analysis, design, coding, testing, implementation and deployment of the systems in AWS and Azure."},{"text":"Cross trained in UX design, user stories, and workflows. Experienced in developing prototypes, wireframes, and mockups via Figma, Axure, MockFlow, and Photoshop."}],"links":[{"url":"https://www.linkedin.com/in/adairdaniels/","text":"LinkedIn"},{"url":"https://github.com/andeleidun","text":"GitHub"}],"classes":"card home-card bio-card"},"highlights":{"title":"Highlights","media":"","content":[{"linkset":{"url":"https://aws.amazon.com/","title":"AWS","img":"aws","text":"Former Senior Frontend Engineer at AWS"}},{"linkset":{"url":"https://www.nike.com/launch","title":"Nike","img":"nike","text":"Former Lead Frontend Developer at Nike"}},{"linkset":{"url":"https://www.hp.com/","title":"HP","img":"hp","text":"Former Senior Frontend Developer at HP"}}],"links":"","classes":"card home-card highlights-card"},"skills":{"title":"Top Skills","media":"","content":[{"skillset":{"title":"React","value":5,"text":"Expert"}},{"skillset":{"title":"JavaScript/TypeScript","value":5,"text":"Expert"}},{"skillset":{"title":"Accessibility","value":5,"text":"Expert"}},{"skillset":{"title":"User Experience","value":5,"text":"Expert"}}],"links":"","classes":"card home-card skills-card"},"experience":{"title":"Experience","media":"","content":[{"groupSet":[{"group":[{"classes":"group adair-futures-group"},{"title":"Adair Futures"},{"dates":"June 2015 - Present"},{"description":"Adair Futures is a business consulting firm founded by Adair to provide high quality UI development, expert technical guidance, and futures forecasts to various clients including Intuit, SDG&E, and T-Mobile; and to function as the umbrella for independent projects by Adair."},{"jobTitle":"Lead Developer"},{"text":"Develop and launch the Keto Mate suite of apps full stack utilizing Angular, Ionic, and NodeJS, and grow its user base \u2013 currently over 20k users with a 4* rating on Google Play."},{"text":"Provide full scope accessibility services for client applications from initial analysis to solution planning and execution to achieve compliance with WCAG 2.1 AA standards using axe, NVDA, and pa11y ci for automated accessibility compliance scans."},{"text":"Created data tables, views, and other components to provide SDG&E Builder Services Portal users with the ability to live view  and download CSVs for service meters and permit data using React with Hooks and Context, and ES6 JS patterns."},{"text":"Developed data fetching, management, and pagination for live project tracker for Intuit project managers to search, filter, edit, and view detailed information for all Intuit projects in React 18 data table, as well as development of data management and pagination components."},{"text":"Consult on frontend technologies for web apps, guiding on design direction, adherence to UX and accessibility standards, and establishing unit testing using React, Angular 8, Bootstrap, Vue, Jest, Mocha, Chai, and JavaScript/TypeScript."},{"text":"Collaborate with client UX designers on wireframes and mockups using Axure, advising on design documents and guiding towards UX best practices and mindfulness of accessibility standards."},{"text":"Research and report on the future development of industries and technologies, and present findings in Qualitative Futures Squares form."},{"skills":["React","JavaScript","TypeScript","axe","NVDA","pa11y","Angular","Ionic","Mocha","Chai","Jest","AWS","EC2","CSS3","SASS","Redux","Axure","GIT","Photoshop","Qualitative Futures Squares","LaTeX","HTML5"]}]},{"group":[{"classes":"group aws-group"},{"title":"Amazon Web Services"},{"dates":"September 2023 - March 2024"},{"description":"Amazon is a top 10 member of the Fortune 500, and is considered to be one of the Big Five American technology companies, along with Alphabet, Apple, Meta and Microsoft. Collabera is a talent agency."},{"jobTitle":"Senior Frontend Engineer"},{"text":"Developed key features for AWS Quicksight accessibility certification effort, including live screen reader status system for reactive searches and roaming highlights, and focus management for global tab navigation and panel rendering, using React 17, TypeScript, and ES6."},{"text":"Created new components for AWS Vega library, and implemented accessibility updates including programmatic determination of aria-label and other accessibility attributes, and visual updates for color contrast, hover, and focus states using Storybook and Material UI Theming."},{"text":"Investigated, documented, and ticketed complex accessibility issues across AWS Quicksight involving the use of data filters and themes across different types of sheets, charts, and tables."},{"text":"Ensured ongoing accessibility, code quality, and data integrity with type, unit, and integration testing, bug fixes, user stories, and code reviews with other team members using React Testing Library, Jest, Sinon, and Enzyme. "},{"text":"Collaborated with cross team designers and engineers to ensure accessibility updates are synchronized with new features and designs using Figma, Slack, Chime, and AWS cloud developer environments."},{"skills":["React","TypeScript","ES6","React Testing Library","Jest","Sinon","Enzyme","JavaScript","Storybook","Material UI","Figma","GIT","AWS","Mocha","HTML","CSS"]}]},{"group":[{"classes":"group nike-group"},{"title":"Nike"},{"dates":"March 2022 - December 2022"},{"description":"Nike is a consistent member of the Fortune 500, founded under its original name Blue Ribbon Sports in 1964. Nike is the world\u2019s largest supplier of athletic shoes and apparel. IGNW is a talent agency."},{"jobTitle":"Lead Frontend Developer"},{"text":"Created key pieces of the frontend user interface for rollout of the Korean global launch for the Nike SNKRS Launch enterprise ecommerce platform including integrations for Korean payment services such as Fiserv and KakaoPay and a stateless API connected address suggestion component using React Hooks, Redux, Next.js, Docker, ES6, and AWS."},{"text":"Developed the analytics, tests, and remote component integration for dual micro frontends utilizing in house tools, JavaScript, New Relic, REST APIs, and Mocha."},{"text":"Expanded functionality and innovating new features for the v3 global launch of the SNKRS Launch checkout micro-frontend in line with modern UX principles."},{"text":"Ensured code quality and data integrity through type testing, bug fixes, unit testing, user stories, and other QA techniques. "},{"text":"Collaborated with team members globally to keep projects moving on time through GIT, JIRA, Confluence, and Zoom."},{"text":"Conducted regular code reviews of code developed by team members."},{"skills":["React","Redux","Docker","Hooks","ES6","AWS","Mocha","New Relic","HTML5","JavaScript","CSS3","GIT","JIRA","Confluence","Zoom","Rest"]}]},{"group":[{"classes":"group alluma-group"},{"title":"Alluma"},{"dates":"October 2020 - March 2022"},{"description":"Alluma is a non-profit entity that specializes in providing technological solutions to state, local, and county governments, and community organizations that have been used to connect clients to services from Medicaid and SNAP to EITC to locally-based programs."},{"jobTitle":"Lead UI Developer"},{"text":"Architected and led the development of the Carousel Solution Engine, a frontend app engine that utilizes live loaded JSON configuration files to generate data driven frontend applications that are WCAG 2.1 AA validated, have multilingual support, and are unit tested out of the box, with test case applications being built alongside for assessing benefit eligibility in California and Tennessee, using React Hooks and Context."},{"text":"Led the development of the React frontend of the One-x-Connection healthcare application system, successfully converting from a class based component system to a React Hooks system, through a successful first launch and first set of post launch features."},{"text":"Created a new UI Element library, with over 100 elements designed to be highly functional and styled out of the box, as well as the publication and maintenance of a private scoped npm package, with the Lead UX Researcher, using React Hooks and both reactive styling through React and modern CSS architecture such as CSS Variables and Grid."},{"text":"Developed new features, providers, views, and components using React Hooks, Redux, ES6, JavaScript, lodash, CSS, REST APIs, UX principles and accessibility standards."},{"text":"Oversaw, coached, and performed code reviews for the frontend team, including senior and junior developers. Advocated for and began weekly check in and coaching sessions with team members."},{"text":"Managed code base quality and data integrity using Azure DevOps, unit and integration testing, Git feature branch management, user story management, bug fixes, and coordination with the QA team."},{"text":"Coordinated with other team leads remotely to keep projects moving on time with design sessions, backlog grooming, sprint planning and retrospectives."},{"skills":["React","React Hooks","ES6","JavaScript","Azure","Redux","CSS","GIT","lodash","REST","Leadership","Coaching","Unit testing","Integration testing","Microsoft SQL Server","Cypress"]}]},{"group":[{"classes":"group hp-group"},{"title":"HP"},{"dates":"February 2019 - September 2019"},{"description":"HP is a consistent member of the top 100 of the Fortune 500, founded under its original name Hewlett-Packard in 1939. HP manages the personal computer and printer divisions of the former Hewlett-Packard Company. Softtek is a talent agency."},{"jobTitle":"Sr. Frontend Developer"},{"text":"Created the client building and floor layout levels of data management with reusable components, frontend views and services for the Transition Management Center (TMC) internal tool using Angular, TypeScript, CSS3, and HTML5."},{"text":"Developed backend services, API endpoints, setup database queries, and managed database schema for TMC using Javascript, Sequelize, NodeJS, and PostgreSQL."},{"text":"Optimized frontend workflow using UX principles, updated technologies, and experimented with new technologies to increase speed of user tasks."},{"text":"Ensured quality of codebase and integrity of data through bug fixes, typing, user stories, and other QA techniques."},{"text":"Coordinated with other team members across the globe to keep projects moving on time through JIRA, team GIT repositories, Scrum meetings, Skype, and Zoom."},{"text":"Conducted code reviews every sprint of code developed by team members."},{"skills":["Angular","Sequelize","PostgreSQL","GraphQL","NodeJS","JavaScript","TypeScript","GIT","HTML5","CSS3","SASS","AWS","Agile","JIRA"]}]},{"group":[{"classes":"group hall-labs-group"},{"title":"Hall Labs"},{"dates":"May 2017 - February 2019"},{"description":"Tracy Hall LLC is a modern Edison Labs whose mission is to spin off successful companies and create great jobs for great people. Tracy Hall LLC is built on the legacy of H.Tracy Hall consulting that was founded February 15 of 1955."},{"jobTitle":"UX Developer"},{"text":"Developed PayZoom payroll Android app using NodeJS, Angular, and Ionic, leading a team of 4 developers/designers."},{"text":"Created real-time data charts that pulled live information from Azure hosted databases using PowerBI to present to client business owners."},{"text":"Established EC2 templates and launched new instances for eCommerce platforms and web presences for client businesses using AWS, WordPress, WooCommerce, HTML5, and CSS3."},{"text":"Reported team progress on development in Agile/Scrum meetings, worked together with the Chief Technical Officer (CTO) to ensure satisfactory progress and results."},{"text":"Performed code reviews of code developed by team members, helped manage team GIT repository."},{"skills":["NodeJS","Angular","Ionic","JavaScript","Typescript","GIT","HTML5","CSS3","SASS","Agile","PowerBI","WordPress","Azure","AWS","Android Studio"]}]},{"group":[{"classes":"group server-sky-group"},{"title":"Server Sky"},{"dates":"September 2015 - June 2016"},{"description":"Server Sky is a small space firm looking to develop the research necessary to, and then implement a space based swam cloud server capable of providing datacenter level computing across the globe."},{"jobTitle":"Physics Researcher"},{"text":"Developed a quantitative predictive model for Server Sky Rutherford scattering of relativistic radiation present in our magnetosphere from the Inner Van Allen Belt."},{"text":"Researched the radiation environment of the Inner Van Allen Belt, particularly around the L2 shell."},{"text":"Delivered talks about research at academic and industry conferences."},{"skills":["Differential Equations","Calculus","Relativistic Physics","LaTeX","TeX"]}]},{"group":[{"classes":"group mt-hood-work-group"},{"title":"Mount Hood Community College"},{"dates":"October 2013 - June 2016"},{"description":"Mount Hood Community College is a school aiming to help create the next generation of leaders for tomorrow."},{"jobTitle":"Lab Assistant/Web Support"},{"text":"Collaborated with Lab Coordinators to prepare and setup labs."},{"text":"Provided IT support for professors and instructors."},{"text":"Developed college web presences for classes and extracurriculars."},{"skills":["HTML","CSS","JavaScript","WordPress"]}]}]}],"links":"","classes":"card home-card experience-card"},"education":{"title":"Education","media":"","content":[{"groupSet":[{"group":[{"classes":"group portland-state-group"},{"title":"Portland State University"},{"dates":"September 2014 - June 2016"},{"text":"GPA: 3.26"},{"text":"Currently On Hold - Finished Junior Year"},{"text":"Major: Physics"},{"text":"Extracurriculars: Physics Society Officer"},{"text":"Assisted Professor Guang-jiong Ni with research on mass aquisition for massless fermions via vacuum phase transition using an effective Hamiltonian."},{"text":"Established Futures Studies course as part of the Chiron Studies program."},{"skills":["Quantum Mechanics","Relativistic Physics","Classical Physics","Derivative Calculus","Integral Calculus","Multivariate Calculus","Linear Algebra","Differential Equations"]}]},{"group":[{"classes":"group mt-hood-ed-group"},{"title":"Mount Hood Community College"},{"dates":"September 2013 - June 2015"},{"text":"GPA: 3.18"},{"text":"Graduated with an Associate of Science"},{"text":"Major: Physics"},{"text":"Extracurriculars: PTK Honors Society Officer"},{"skills":["German","Chemistry","Web Development"]}]},{"group":[{"classes":"group independent-study-group"},{"title":"Continued Learning"},{"dates":"June 2016 - Present"},{"text":"Utiilized courses from schools like Harvard, MIT, and Yale from providers like EdX, Udacity, and Coursera."},{"text":"Other learning through sites such as Codeacademy, Lynda.com, Pluralsight, and Youtube."},{"skills":["React","Angular","Ionic","UX Design","User Centric Design Principles","WCAG Accessibility Guidelines","JavaScript","Typescript","GIT","HTML5","CSS3","SASS","Mocha","Chai","Enzyme","PHP","PowerBI","WordPress","Azure","AWS","Android Studio"]}]}]}],"links":"","classes":"card home-card education-card"}}}')},95:function(e,t,n){"use strict";n(0);var r=n(18),a=n.n(r),i=n(15),s=(n(34),n(35),n(36),n(37),n(14)),o=n(2);const c=n(144).default;n(38);t.a=()=>{const e=Object(o.jsx)(a.a,{value:c,highlight:e=>Object(i.highlight)(e,i.languages.js),padding:10,style:{fontFamily:'"Fira code", "Fira Mono", monospace',fontSize:12}});return Object(o.jsx)("main",{className:"app-code-viewer",children:Object(o.jsx)(s.a,{content:e,classGiven:"card"})})}},96:function(e,t,n){"use strict";var r=n(0),a=n.n(r),i=(n(145),n(14)),s=n(52),o=n(205),c=n(203),l=n(111),d=n(201),p=n(202),m=n(2);class u extends a.a.Component{constructor(e){super(e),this.chips=[],this.tweets=[],this.content=void 0,this.state={symbols:[],input:"",error:"",interval:void 0,currentCount:5,filter:[],loading:!1},this.handleChange=this.handleChange.bind(this),this.handleSubmit=this.handleSubmit.bind(this),this.timer=this.timer.bind(this)}renderChips(e){const t=[];for(const n of e){if(n.tweets){let e="chip";this.state.filter.includes(n.key)&&(e="chip active-chip"),t.push(Object(m.jsx)(d.a,{badgeContent:n.tweets.length,className:"badge",children:Object(m.jsx)(l.a,{label:n.label,className:e,onClick:()=>this.chipClick(n)},n.key)}))}this.chips=t}}setTimer(){const e=setInterval(this.timer,6e4);this.setState({interval:e,currentCount:5})}timer(){const e=this.state.currentCount-1;e>=0?this.setState({currentCount:e}):(this.submitRequest(),clearInterval(this.state.interval),this.setTimer())}renderTweets(e){const t=[];let n=0;for(const r of e)if(r.tweets){n++;for(const[e,n]of r.tweets.entries()){const r=Object(m.jsxs)("div",{children:[Object(m.jsx)("figure",{className:"picture",children:Object(m.jsx)("img",{src:n.user.avatar_url_ssl,alt:n.user.username})}),Object(m.jsxs)("p",{className:"namearea",children:[Object(m.jsx)("span",{className:"name",children:n.user.name})," ",Object(m.jsxs)("span",{className:"username",children:["@ ",n.user.username]})]}),Object(m.jsx)("p",{className:"text",children:n.body})]},n.user.username+e);t.push(Object(m.jsx)(i.a,{content:r,classGiven:"card"},e))}}n>0&&this.setTimer(),this.tweets=t}chipClick(e){const t=this.state.filter,n=this.state.symbols,r=[];if(t.includes(e.key)){const r=t.indexOf(e.key);if(t.splice(r,1),0===t.length)return this.setState({filter:t}),clearInterval(this.state.interval),this.renderTweets(n),void this.renderChips(n)}else t.push(e.key);for(const a of t)for(const e of n)if(e.key===a){r.push(e);break}this.setState({filter:t}),clearInterval(this.state.interval),this.renderTweets(r),this.renderChips(n)}async retrieveTweets(e){var t=this;this.setState({loading:!0});const n=function(e){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{headers:{}};return fetch(e,{...n,headers:{...n.headers,"X-Requested-With":"stock-twits-live-feed"}}).then((e=>e.json())).catch((e=>t.setState({error:e})))};for(const r of e){const e="https://api.stocktwits.com/api/2/streams/symbol/".concat(r.label).concat(".json"),t="https://api.allorigins.win/get?url=".concat(e);await n(t).then((e=>{const t=JSON.parse(e.contents);r.tweets=t.messages})).catch((e=>this.setState({error:e})))}return!this.state.error&&e[0].tweets&&(this.renderChips(e),this.renderTweets(e)),this.setState({loading:!1}),e}async submitRequest(){const e=this.state.input.toUpperCase().replace(/\s+/g,"").split(",");let t=[],n=0;for(const r of e)t.push({key:n,label:r,tweets:null}),n++;t=await this.retrieveTweets(t),this.setState({symbols:t})}handleChange(e){e.preventDefault(),this.setState({input:e.target.value})}handleSubmit(e){e.preventDefault(),this.submitRequest()}componentWillUnmount(){clearInterval(this.state.interval)}render(){return this.state.loading?this.content=Object(m.jsx)(p.a,{}):this.state.error?this.content=Object(m.jsx)("p",{children:this.state.error}):this.tweets[0]?this.content=Object(m.jsxs)("section",{className:"content",children:[Object(m.jsx)("section",{className:"chips",children:this.chips}),Object(m.jsx)("section",{className:"tweets",children:this.tweets})]}):this.content=null,Object(m.jsxs)("main",{className:"app-stocktwits",children:[Object(m.jsx)("section",{className:"search",children:Object(m.jsxs)("form",{children:[Object(m.jsx)(o.a,{className:"stock-input",id:"stock-symbols",label:"Input stock symbols (separate with a comma)",value:this.state.input,onChange:this.handleChange,InputProps:{startAdornment:Object(m.jsx)(c.a,{position:"start",children:"$"})}}),Object(m.jsx)("br",{}),Object(m.jsx)(s.a,{className:"search-button",variant:"contained",onClick:this.handleSubmit,children:"Search"})]})}),this.content]})}}t.a=u},97:function(e,t,n){"use strict";n(0);var r=n(18),a=n.n(r),i=n(15),s=(n(34),n(35),n(36),n(37),n(14)),o=n(2);n(38);const c=n(147).default,l=Object(o.jsx)(a.a,{value:c,highlight:e=>Object(i.highlight)(e,i.languages.js),padding:10,style:{fontFamily:'"Fira code", "Fira Mono", monospace',fontSize:12}});t.a=function(){return Object(o.jsx)("main",{className:"app-code-viewer",children:Object(o.jsx)(s.a,{content:l,classGiven:"card"})})}},98:function(e,t,n){"use strict";var r=n(0),a=n.n(r),i=(n(148),n(12)),s=n(14),o=n(2);class c extends a.a.Component{constructor(){super(...arguments),this.panelTitle=this.props.img.title,this.panelSrc=this.props.img.img,this.panelAlt=this.props.img.alt,this.panelFigure=Object(o.jsx)("figure",{children:Object(o.jsx)("img",{src:this.panelSrc,alt:this.panelAlt})})}render(){return Object(o.jsx)("div",{children:Object(o.jsx)(s.a,{title:this.panelTitle,content:this.panelFigure,classGiven:"card panel-card"})})}}class l extends a.a.Component{render(){return Object(o.jsxs)("nav",{children:[Object(o.jsx)("button",{onClick:()=>this.props.onClick("first"),children:"First"}),Object(o.jsx)("button",{onClick:()=>this.props.onClick("previous"),children:"Previous"}),Object(o.jsx)("button",{onClick:()=>this.props.onClick("next"),children:"Next"}),Object(o.jsx)("button",{onClick:()=>this.props.onClick("last"),children:"Last"})]})}}class d extends a.a.Component{constructor(e){super(e),this.state={images:Array(3).fill(""),index:1,initialIndex:1,finalIndex:0,loading:!0}}async retrieveImages(e){this.setState({loading:!0}),this.setState({images:Array(3).fill(null)});const t="https://api.allorigins.win/get?url=";let n=e;const r=[];for(let s=0;s<3;s++){const e="http://xkcd.com/".concat(n).concat("/info.0.json");r.push(e),n++}const a=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{headers:{}};return fetch(e,{...t,headers:{...t.headers,"X-Requested-With":"xkcd-slideshow"}}).then((e=>e.json())).catch((e=>console.error(e)))};if(0===this.state.finalIndex){const e=t.concat("http://xkcd.com/info.0.json");await a(e).then((e=>{const t=JSON.parse(e.contents).num-2;this.setState({finalIndex:t})})).catch((e=>console.error(e)))}const i=[];for(const s of r){const e=t.concat(s);await a(e).then((e=>{const t=JSON.parse(e.contents);i.push(t)})).catch((e=>console.error(e)))}this.setState({images:i}),this.setState({loading:!1})}renderPanels(e){return Object(o.jsx)(c,{img:this.state.images[e],className:"panel"})}navigate(e){let t=1;switch(e){case"first":t=this.state.initialIndex;break;case"previous":t=this.state.index-3,t<this.state.initialIndex&&(t=this.state.initialIndex);break;case"next":t=this.state.index+3,t>this.state.finalIndex&&(t=this.state.finalIndex);break;case"last":t=this.state.finalIndex;break;default:console.log("Navigation error.")}this.retrieveImages(t),this.setState({index:t})}componentDidMount(){this.retrieveImages(this.state.index)}render(){return Object(o.jsxs)("div",{className:"xkcd",children:[this.state.loading?Object(o.jsx)("img",{src:i.v,className:"loading-logo",alt:"logo"}):this.state.images[0]?Object(o.jsxs)("main",{className:"slideshow",children:[this.renderPanels(0),this.renderPanels(1),this.renderPanels(2)]}):Object(o.jsx)("p",{children:"Loading error"}),Object(o.jsxs)("footer",{className:"xkcd-footer",children:[Object(o.jsx)(l,{onClick:e=>this.navigate(e)}),Object(o.jsx)("section",{className:"credit",children:Object(o.jsxs)("p",{children:["Sincere thanks to"," ",Object(o.jsx)("a",{href:"https://xkcd.com",children:"Randlal Munroe over at XKCD"})," for making such an awesome webcomic."]})})]})]})}}t.a=d},99:function(e,t,n){"use strict";n(0);var r=n(18),a=n.n(r),i=n(15),s=(n(34),n(35),n(36),n(37),n(14)),o=n(2);n(38);const c=n(149).default,l=Object(o.jsx)(a.a,{value:c,highlight:e=>Object(i.highlight)(e,i.languages.js),padding:10,style:{fontFamily:'"Fira code", "Fira Mono", monospace',fontSize:12}});t.a=function(){return Object(o.jsx)("main",{className:"app-code-viewer",children:Object(o.jsx)(s.a,{content:l,classGiven:"card"})})}}},[[197,1,2]]]);
//# sourceMappingURL=main.39ad4978.chunk.js.map